syntax = "proto3";

option go_package = "./pb";

service KrkStops {
    rpc GetAirly(GetMeasurementRequest) returns (Measurement) {}
    rpc FindNearestAirlyInstallation(Location) returns (Installation) {}
    rpc GetAirlyInstallation(GetAirlyInstallationRequest) returns (Installation) {}
    rpc GetDepartures2(GetDepartures2Request) returns (GetDepartures2Response) {}
    rpc SearchStops2(SearchStops2Request) returns (SearchStops2Response) {}
}

enum Transit {
    BUS=0;
    TRAM=1;
    ALL=2;
}

message GetMeasurementRequest {
    int32 id = 1;
}

message GetAirlyInstallationRequest {
    int32 id = 1;
}

message GetDepartures2Request {
    uint32 id = 3;
}

message GetDepartures2Response {
    repeated Departure departures = 1;
}

message SearchStops2Request {
    string query = 1;
}

message SearchStops2Response {
    repeated Stop stops = 1;
}

message Installation{
    int32 id = 1;
    float latitude = 2;
    float longitude = 3;
}

message Measurement {
    int32 caqi = 1;
    string colorStr = 2;
    int32 humidity = 3;
    float temperature = 4;
    uint32 color = 5;
}

message Location {
    float latitude = 1;
    float longitude = 2;
}

message Departure {
    int32 relativeTime = 1;
    string plannedTime = 2;
    string direction = 3;
    string patternText = 4;
    uint32 color = 5;
    string relativeTimeParsed = 6;
    bool predicted = 7;
    Transit type = 8;
}

message Stop {
    reserved 1;
    string name = 2;
    uint32 id = 3;
    Transit type = 4;
}



